<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="default" name="extension-youtube">

  <target name="default" depends="clean, update-dependencies, compile, jar, zip, publish"/>
  <target name="dependency" depends="default"/>
	
    <property name="appname" value="${ant.project.name}"/>
    <property name="org" value="OpenEdit, Inc."/>
    <property name="src" location="${basedir}/src"/>
	<property name="testsrc" location="${basedir}/tests"/>
    <property name="lib" location="${basedir}/lib"/>
	<property name="base" location="${basedir}/base"/>
	<property name="branch" value="dev_"/>
	
    <property name="etc" location="${basedir}/etc"/>
    <property name="build" location="${basedir}/build"/>
	<property name="compiled" location="${basedir}/build/compiled"/>
	
    <property name="wardir" location="${build}/wartmp"/>
    <property name="webapp" location="${basedir}/webapp"/>
	<property name="webinf" location="${webapp}/WEB-INF"/>
	<!-- 
		========================================================================
		Anthill build server properties.  These properties will be passed in
		by anthill when this script is executed on the build server.
		
			- "version" is set by the version adapter
			- "deployDir" is set by anthill.publish.dir
		========================================================================
	--> 
	<property environment="env" />
	<property name="version"  value="1.${env.BUILD_NUMBER}"/>
  	<property name="deployDir" location="deploy"/>
  	
  	<!-- A convenience variable for documentation output -->
  	<property name="versionDir" location="${deployDir}/${version}"/>
  	<property name="versionedApp" value="${appname}-${version}"/>
  
	<target name="update-dependencies" depends="clean">
	     <mkdir dir="${wardir}/WEB-INF/" />
		 <get dest="${wardir}/WEB-INF/install.xml" src="http://dev.entermediasoftware.com/jenkins/job/${branch}entermedia-server/lastSuccessfulBuild/artifact/deploy/install.xml"/>
		 <ant antfile="${wardir}/WEB-INF/install.xml" inheritAll="false" dir="${wardir}/WEB-INF/" target="default"/> 
	</target>
	
  <target name="clean">
     <delete dir="${build}"/>
  </target>

	<target name="source"> 
		<mkdir dir="${deployDir}/builds/" />	
	  	<zip destfile="${deployDir}/builds/${appname}-${version}-src.zip"  basedir="." excludes="deploy/**, build/**" />
	  </target>
	
	
	<!-- added here -->
	<target name="compile" depends="clean">
	    <mkdir dir="${compiled}"/>
	  
	 	<copy todir="${compiled}">
			<fileset dir="${src}">
			  <include name="*.xml"/>
			</fileset>
		</copy>
	  
	    <javac includeantruntime="false" debug="true" destdir="${compiled}" srcdir="${src}" source="1.5" target="1.5">
	      <classpath>
	        <fileset dir="${lib}">
	          <include name="*.jar"/>
	          <include name="compile/*.jar"/>
	        </fileset>
	        <fileset dir="${wardir}/WEB-INF/lib/">
	            <include name="*.jar"/>
	         </fileset>
	      </classpath>
	      <include name="**"/>
	    </javac>
	  </target>
	
	<target name="jar" depends="compile">
			<mkdir dir="${deployDir}/builds/"/>
			<jar jarfile="${deployDir}/builds/${branch}${appname}-${version}.jar" basedir="${compiled}" >
				<exclude name="**/*Test*"/>
				<manifest>
			    	<attribute name="Built-By" value="${user.name}"/>
				    <attribute name="Implementation-Title" value="${appname}"/>
				    <attribute name="Implementation-Version" value="${version}"/>
				    <attribute name="Implementation-Vendor" value="${org}"/>
			    </manifest>
			</jar>
	  </target>
 
	<target name="zip">
		<mkdir dir="${deployDir}/builds/"/>
		<zip destfile="${deployDir}/builds/${appname}.zip" >			
			<zipfileset dir="${webapp}/youtube" prefix="youtube" />

					<zipfileset dir="${etc}" prefix="etc" includes="install.js" />
			<zipfileset dir="${lib}" prefix="lib" includes="*.jar" />

		</zip>
  </target>

	<target name="publish" depends="zip">
		  
			<!-- publish results to anthill -->
		 	<copy file="${deployDir}/builds/extension-youtube.zip" overwrite="true"
		        tofile="${deployDir}/extension-youtube.zip"/>

		 	<copy file="${etc}/install.js" overwrite="true"
		        tofile="${deployDir}/install.js"/>

			
		</target>
	  
  
  
 
</project>